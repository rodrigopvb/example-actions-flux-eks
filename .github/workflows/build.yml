# build.yml
on:
  pull_request:
    paths:
    - app/**
  push:
    paths:
    - app/**
    branches:         # array of glob patterns matching against refs/heads. Optional; defaults to all
    - master          # triggers on pushes that contain changes in master

name: Build and Push to ECR

# https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-envvars.html
env:
  AWS_DEFAULT_REGION: ap-southeast-2
  AWS_DEFAULT_OUTPUT: json
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  CONTAINER_IMAGE: example-eks:${{ github.sha }}  
  TEST: example-eks-test
  KUBE_NAMESPACE: Deployment  

jobs:
  build-and-push:
    name: Build and deploy
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@master

    # Add steps here like linting, testing, minification, etc.
    
    - name: Configure AWS credentials                          
      uses: aws-actions/configure-aws-credentials@v1           
      with:                                                    
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}        
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_DEFAULT_REGION }}  
  
    - name: Login to Amazon ECR            
      id: login-ecr                        
      uses: aws-actions/amazon-ecr-login@v1
  
    
    - name: Build and tag the image
      run: |
        # Build and tag the image
        docker build \
          -t $CONTAINER_IMAGE \
          -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$CONTAINER_IMAGE ./app
           
    # Add additional steps here like scanning of image

    # Only push to registry on master
    - name: Push
      if: github.ref == 'refs/heads/master'
      run: |
        # Push image to AWS ECR
        docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$CONTAINER_IMAGE
    
    - name: deploy to cluster
      uses: kodermax/kubectl-aws-eks@master
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}        
      with:
        args: set image deployment ${{ env.TEST }} ${{ env.TEST }}=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$CONTAINER_IMAGE
        
    - name: verify deployment
      uses: kodermax/kubectl-aws-eks@master
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      with:
        args: rollout status deployment/my-app
    
    
    # - name: Deploy to Kubernetes cluster                                                                            
    #   uses: kodermax/kubectl-aws-eks@master                                                                         
    #   env:                                                                                                          
    #     RELEASE_IMAGE: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.RELEASE_REVISION }}
    #   with:                                                                                                         
    #     args: set image deployment ${{ env.TEST }} ${{ env.TEST }}=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$CONTAINER_IMAGE
    
    # - name: Verify Kubernetes deployment                               
    #   uses: kodermax/kubectl-aws-eks@master                            
    #   with:                                                            
    #     args: rollout status deploy my-pod -n $KUBE_NAMESPACE    